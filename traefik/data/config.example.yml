http:
  middlewares:
    secured:
      chain:
        middlewares:
          - https-only
          - known-ips
          - secure-headers

    https-only:
      redirectScheme:
        scheme: https

    known-ips:
      ipWhiteList:
        sourceRange:
          - "192.168.1.7"
          - "127.0.0.1/32"
          - "10.0.221.0/24"

    secure-headers:
      headers:
        browserXssFilter: true
        contentTypeNosniff: true
        frameDeny: true
        forceSTSHeader: true
        sslRedirect: true
        stsIncludeSubdomains: true
        stsPreload: true
        stsSeconds: 31536000
        customFrameOptionsValue: "SAMEORIGIN"

    # # Middleware for redirecting Nextcloud's Cal & Cardav URLS
    # nextcloud-dav:
    #   redirectRegex:
    #     permanent: true
    #     regex: "https://(.*)/.well-known/(card|cal)dav"
    #     replacement: "https://${1}/remote.php/dav/"

  # # Example of using Traefik to statically route and proxy network endpoints outside Traefik control.
  # # This is useful for proxying routers, nas-drives or even host-mode docker containers on localhost.
  # routers:
  #   router-homeassistant:
  #     entryPoints:
  #       - https
  #     rule: Host(`hass.privacy.box`)
  #     middlewares: 
  #       - secured
  #     service: service-homeassistant
  #     tls:
  #       certResolver: le-dns
  #   router-jellyfin:
  #     entryPoints:
  #       - https
  #     rule: Host(`jellyfin.privacy.box`)
  #     middlewares: 
  #       - secured
  #     service: service-jellyfin
  #     tls:
  #       certResolver: le-dns
  #   router-transmission:
  #     entryPoints:
  #       - https
  #     rule: Host(`transmission.privacy.box`)
  #     middlewares: 
  #       - secured
  #     service: service-transmission
  #     tls:
  #       certResolver: le-dns
  #   router-nzbget:
  #     entryPoints:
  #       - https
  #     rule: Host(`nzbget.privacy.box`)
  #     middlewares: 
  #       - secured
  #     service: service-nzbget
  #     tls:
  #       certResolver: le-dns
  #   router-jackett:
  #     entryPoints:
  #       - https
  #     rule: Host(`jackett.privacy.box`)
  #     middlewares: 
  #       - secured
  #     service: service-jackett
  #     tls:
  #       certResolver: le-dns
  #   router-prowlarr:
  #     entryPoints:
  #       - https
  #     rule: Host(`prowlarr.privacy.box`)
  #     middlewares: 
  #       - secured
  #     service: service-prowlarr
  #     tls:
  #       certResolver: le-dns

  # services:
  #   service-homeassistant:
  #     loadBalancer:
  #       servers:
  #       - url: "http://10.0.200.5:8123"
  #   service-jellyfin:
  #     loadBalancer:
  #       servers:
  #       - url: "http://10.0.200.5:8096"
  #   service-transmission:
  #     loadBalancer:
  #       servers:
  #       - url: "http://10.0.200.5:9091"
  #   service-nzbget:
  #     loadBalancer:
  #       servers:
  #       - url: "http://10.0.200.5:6789"
  #   service-jackett:
  #     loadBalancer:
  #       servers:
  #       - url: "http://10.0.200.5:9117"
  #   service-prowlarr:
  #     loadBalancer:
  #       servers:
  #       - url: "http://10.0.200.5:9696"