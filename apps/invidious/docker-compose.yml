name: invidious

networks:
  proxy:
    name: proxy
    external: true
  internal:
    internal: true

volumes:
  invidious-database:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${DOCKER_ROOT}/invidious/database

services:
  invidious-db:
    container_name: invidious-db
    image: postgres:14-alpine
    security_opt:
      - no-new-privileges:true
    environment:
      - POSTGRES_DB=invidious
      - POSTGRES_USER=kemal
      - POSTGRES_PASSWORD=${DB_USER_PASS}
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8 --lc-collate=C --lc-ctype=C
    volumes:
      - invidious-database:/var/lib/postgresql/data
      - ./config/sql:/config/sql
      - ./docker/init-invidious-db.sh:/docker-entrypoint-initdb.d/init-invidious-db.sh
      - /etc/localtime:/etc/localtime:ro
    networks:
      - internal
    labels:
      - "traefik.enable=false"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
    restart: unless-stopped

  invidious-signature-helper:
    container_name: invidious-signature-helper
    image: quay.io/invidious/inv-sig-helper:latest
    security_opt:
      - no-new-privileges:true
    volumes:
      - /etc/localtime:/etc/localtime:ro
    networks:
      - internal
    init: true
    command: ["--tcp", "0.0.0.0:12999"]
    environment:
      - RUST_LOG=info
    cap_drop:
      - ALL
    read_only: true
    restart: unless-stopped

  invidious-app:
    container_name: invidious-app
    image: quay.io/invidious/invidious:latest
    security_opt:
      - no-new-privileges:true
    volumes:
      - /etc/localtime:/etc/localtime:ro
    depends_on:
      - invidious-db
    networks:
      - internal
      - proxy
    labels:
      - traefik.enable=true
      - traefik.http.routers.invidious-app-secure.entrypoints=websecure
      - traefik.http.routers.invidious-app-secure.rule=Host(`${SUBDOMAIN}.${DOMAIN}`)
      - traefik.http.routers.invidious-app-secure.tls=true
      - traefik.http.routers.invidious-app-secure.tls.certresolver=${CERT_RESOLVER}
      - traefik.http.routers.invidious-app-secure.service=invidious-app
      - traefik.http.routers.invidious-app-secure.middlewares=https-redirect@file,non-www@file,secure-headers@file,gzip-compress@file
      - traefik.http.services.invidious-app.loadbalancer.server.port=3000
    environment:
      INVIDIOUS_CONFIG: |
        db:
          dbname: invidious
          user: kemal
          password: ${DB_USER_PASS}
          host: invidious-db
          port: 5432
        check_tables: true
        signature_server: invidious-signature-helper:12999
        visitor_data: ${VISITOR_DATA}
        po_token: ${PO_TOKEN}
        https_only: true
        domain: ${SUBDOMAIN}.${DOMAIN}
        statistics_enabled: false
        hmac_key: ${HMAC_KEY}
    logging:
      options:
        max-size: "1G"
        max-file: "4"
    healthcheck:
      test: wget -nv --tries=1 --spider http://127.0.0.1:3000/api/v1/trending || exit 1
      interval: 30s
      timeout: 5s
      retries: 2
    restart: unless-stopped