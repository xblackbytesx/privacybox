version: '3'

networks:
  proxy:
    name: proxy
    external: true
  internal:
    internal: true

volumes:
  spotweb-database:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${DOCKER_ROOT}/spotweb/database/

services:
  spotweb-db:
    container_name: spotweb-db
    image: mariadb:latest
    security_opt:
      - no-new-privileges:true
    networks:
      - internal
    command: --transaction-isolation=READ-COMMITTED --binlog-format=ROW
    environment:
      - MYSQL_ROOT_PASSWORD=${DB_ROOT_PASS}
      - MYSQL_DATABASE=spotweb
      - MYSQL_USER=spotweb
      - MYSQL_PASSWORD=${DB_USER_PASS}
    volumes:
      - spotweb-database:/var/lib/mysql
      - /etc/localtime:/etc/localtime:ro
    labels:
      - "traefik.enable=false"
    healthcheck:
      test: [ "CMD", "mysqladmin" ,"ping", "-h", "localhost" ]
      timeout: 20s
      interval: 15s
      retries: 30
    restart: unless-stopped

  spotweb-app:
    container_name: spotweb-app
    image: erikdevries/spotweb:latest
    security_opt:
      - no-new-privileges:true
    environment:
      - DB_ENGINE=pdo_mysql
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_NAME=spotweb
      - DB_USER=spotweb
      - DB_PASS=${DB_USER_PASS}
    depends_on:
      - spotweb-db
    volumes:
      - /etc/localtime:/etc/localtime:ro
    labels:
      - traefik.enable=true
      - traefik.http.routers.spotweb-app.entrypoints=web
      - traefik.http.routers.spotweb-app.rule=Host(`${SUBDOMAIN}.${DOMAIN}`)
      - traefik.http.routers.spotweb-app-secure.entrypoints=websecure
      - traefik.http.routers.spotweb-app-secure.rule=Host(`${SUBDOMAIN}.${DOMAIN}`)
      - traefik.http.routers.spotweb-app-secure.tls=true
      - traefik.http.routers.spotweb-app-secure.tls.certresolver=le-dns
      - traefik.http.routers.spotweb-app-secure.service=spotweb-app
      - traefik.http.routers.spotweb-app-secure.middlewares=https-redirect@file,non-www@file,secure-headers@file,gzip-compress@file,basic-auth@file
      - traefik.http.services.spotweb-app.loadbalancer.server.port=80
      - traefik.http.routers.http-catchall.rule=HostRegexp(`{any:.+}`)
      - traefik.http.routers.http-catchall.entrypoints=web
      - traefik.http.routers.http-catchall.middlewares=https-redirect@file
    networks:
      - internal
      - proxy
    restart: unless-stopped