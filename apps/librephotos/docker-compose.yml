version: '3'

networks:
  proxy:
    name: proxy
    external: true
  internal:
    internal: true

volumes:
  librephotos-database:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${DOCKER_ROOT}/librephotos/database
  librephotos-photos:
    driver: local
    driver_opts:
      type: ${PHOTOS_DRIVER_OPT_TYPE}
      o: ${PHOTOS_DRIVER_OPT_O}
      device: ${PHOTOS_PATH}
  librephotos-protected:
    driver: local
    driver_opts:
      type: ${PROTECTED_DRIVER_OPT_TYPE}
      o: ${PROTECTED_DRIVER_OPT_O}
      device: ${PROTECTED_PATH}
  librephotos-logs:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${DOCKER_ROOT}/librephotos/logs
  librephotos-cache:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${DOCKER_ROOT}/librephotos/cache

services:
  librephotos-proxy:
    container_name: librephotos-proxy
    image: reallibrephotos/librephotos-proxy:dev
    security_opt:
      - no-new-privileges:true
    tty: true
    networks:
      - internal
      - proxy
    volumes:
      - /etc/localtime:/etc/localtime:ro
    labels:
      - traefik.enable=true
      - traefik.http.routers.librephotos-proxy.entrypoints=http
      - traefik.http.routers.librephotos-proxy.rule=Host(`${SUBDOMAIN}.${DOMAIN}`)
      - traefik.http.routers.librephotos-proxy-secure.entrypoints=https
      - traefik.http.routers.librephotos-proxy-secure.rule=Host(`${SUBDOMAIN}.${DOMAIN}`)
      - traefik.http.routers.librephotos-proxy-secure.tls=true
      - traefik.http.routers.librephotos-proxy-secure.tls.certresolver=le-dns
      - traefik.http.routers.librephotos-proxy-secure.service=librephotos-proxy
      - traefik.http.routers.librephotos-proxy-secure.middlewares=https_redirect@docker,non_www@docker,sec_headers@docker,gzip_compress@docker
      - traefik.http.services.librephotos-proxy.loadbalancer.server.port=80
    restart: unless-stopped

  librephotos-db:
    container_name: librephotos-db
    image: postgres:12-alpine
    security_opt:
      - no-new-privileges:true
    networks:
      - internal
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_USER_PASS}
      - POSTGRES_DB=librephotos
    volumes:
      - librephotos-database:/var/lib/postgresql/data
      - /etc/localtime:/etc/localtime:ro
    labels:
      - "traefik.enable=false"
    command: postgres -c fsync=off -c synchronous_commit=off -c full_page_writes=off -c random_page_cost=1.0
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -d librephotos -U $DB_USER']
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  frontend:
    container_name: librephotos-frontend
    image: reallibrephotos/librephotos-frontend:dev
    security_opt:
      - no-new-privileges:true
    tty: true
    networks:
      - internal
    volumes:
      - /etc/localtime:/etc/localtime:ro
    restart: unless-stopped

  backend:
    container_name: librephotos-backend
    image: reallibrephotos/librephotos:dev
    security_opt:
      - no-new-privileges:true
    networks:
      - internal
    volumes:
      - librephotos-photos:/data
      - librephotos-protected:/code/protected_media
      - librephotos-logs:/code/logs
      - librephotos-cache:/root/.cache
      - /etc/localtime:/etc/localtime:ro
    environment:
      - SECRET_KEY=${APP_SECRET}
      - BACKEND_HOST=backend
      - ADMIN_EMAIL=${ADMIN_EMAIL}
      - ADMIN_USERNAME=${USERNAME}
      - ADMIN_PASSWORD=${USERPASS}
      - DEBUG=true
      - DB_BACKEND=postgresql
      - DB_NAME=librephotos
      - DB_USER=${DB_USER}
      - DB_PASS=${DB_USER_PASS}
      - DB_HOST=librephotos-db
      - DB_PORT=5432
      - REDIS_HOST=librephotos-redis
      - REDIS_PORT=6379
      - MAPBOX_API_KEY=${MAPBOX_API_KEY}
      - TIME_ZONE=${TZ}
      - WEB_CONCURRENCY=${GUNNI_WORKERS}
      - WORKER_TIMEOUT=${WORKER_TIMEOUT}
      - SKIP_PATTERNS=${SKIP_PATTERNS}
    labels:
      - "traefik.enable=false"
    depends_on:
      librephotos-db:
        condition: service_healthy
    restart: unless-stopped

  librephotos-redis:
    container_name: librephotos-redis
    image: redis:alpine
    security_opt:
      - no-new-privileges:true
    networks: 
      - internal
    volumes:
      - /etc/localtime:/etc/localtime:ro
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
    labels:
      - "traefik.enable=false"
    restart: unless-stopped
