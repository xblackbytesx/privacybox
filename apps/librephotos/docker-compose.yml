version: '3.8'

networks:
  proxy:
    name: proxy
    external: true
  internal:
    internal: true

volumes:
  librephotos-database:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${DOCKER_ROOT}/librephotos/database
  librephotos-stories:
    driver: local
    driver_opts:
      type: ${STORIES_DRIVER_OPT_TYPE}
      o: ${STORIES_DRIVER_OPT_O}
      device: ${STORIES_PATH}
  librephotos-protected:
    driver: local
    driver_opts:
      type: ${PROTECTED_DRIVER_OPT_TYPE}
      o: ${PROTECTED_DRIVER_OPT_O}
      device: ${PROTECTED_PATH}
  librephotos-logs:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${DOCKER_ROOT}/librephotos/data/logs
  librephotos-cache:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${DOCKER_ROOT}/librephotos/data/cache

services:
  librephotos-proxy:
    container_name: librephotos-proxy
    image: reallibrephotos/librephotos-proxy:latest
    security_opt:
      - no-new-privileges:true
    networks:
      - internal
      - proxy
    volumes:
      - librephotos-stories:/data:ro
      - librephotos-protected:/protected_media
      - /etc/localtime:/etc/localtime:ro
    labels:
      - traefik.enable=true
      - traefik.http.routers.librephotos-proxy-secure.entrypoints=websecure
      - traefik.http.routers.librephotos-proxy-secure.rule=Host(`${SUBDOMAIN}.${DOMAIN}`)
      - traefik.http.routers.librephotos-proxy-secure.tls=true
      - traefik.http.routers.librephotos-proxy-secure.tls.certresolver=le-dns
      - traefik.http.routers.librephotos-proxy-secure.service=librephotos-proxy
      - traefik.http.routers.librephotos-proxy-secure.middlewares=https-redirect@file,non-www@file,secure-headers@file,gzip-compress@file
      - traefik.http.services.librephotos-proxy.loadbalancer.server.port=80
    depends_on:
      - backend
      - frontend
    restart: unless-stopped

  librephotos-db:
    container_name: librephotos-db
    image: postgres:13-alpine
    security_opt:
      - no-new-privileges:true
    networks:
      - internal
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_USER_PASS}
      - POSTGRES_DB=librephotos
    volumes:
      - librephotos-database:/var/lib/postgresql/data
      - /etc/localtime:/etc/localtime:ro
    labels:
      - "traefik.enable=false"
    command: postgres -c fsync=off -c synchronous_commit=off -c full_page_writes=off -c random_page_cost=1.0
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -d librephotos -U $DB_USER']
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  frontend:
    container_name: librephotos-frontend
    image: reallibrephotos/librephotos-frontend:latest
    security_opt:
      - no-new-privileges:true
    networks:
      - internal
    volumes:
      - /etc/localtime:/etc/localtime:ro
    restart: unless-stopped

  backend:
    container_name: librephotos-backend
    image: reallibrephotos/librephotos:latest
    security_opt:
      - no-new-privileges:true
    networks:
      - internal
    volumes:
      - librephotos-stories:/data:ro
      - librephotos-protected:/protected_media
      - librephotos-logs:/logs
      - librephotos-cache:/root/.cache
      - /etc/localtime:/etc/localtime:ro
    environment:
      - SECRET_KEY=${APP_SECRET}
      - BACKEND_HOST=backend
      - ADMIN_EMAIL=${ADMIN_EMAIL}
      - ADMIN_USERNAME=${USERNAME}
      - ADMIN_PASSWORD=${USERPASS}
      - DB_BACKEND=postgresql
      - DB_NAME=librephotos
      - DB_USER=${DB_USER}
      - DB_PASS=${DB_USER_PASS}
      - DB_HOST=librephotos-db
      - DB_PORT=5432
      - MAPBOX_API_KEY=${MAPBOX_API_KEY:-}
      - WEB_CONCURRENCY=${GUNNI_WORKERS:-1}
      - SKIP_PATTERNS=${SKIP_PATTERNS:-}
      - ALLOW_UPLOAD=${ALLOW_UPLOAD:-false}
      - CSRF_TRUSTED_ORIGINS=https://${SUBDOMAIN}.${DOMAIN}
      - DEBUG=0
      - HEAVYWEIGHT_PROCESS=${HEAVYWEIGHT_PROCESS:-}
    labels:
      - "traefik.enable=false"
    depends_on:
      librephotos-db:
        condition: service_healthy
    restart: unless-stopped
