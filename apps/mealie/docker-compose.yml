version: "3.1"

networks:
  proxy:
    name: proxy
    external: true
  internal:
    internal: true

volumes:
  mealie-database:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${DOCKER_ROOT}/mealie/database
  mealie-data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${DOCKER_ROOT}/mealie/data

services:
  mealie-db:
    container_name: mealie-db
    image: postgres:12-alpine
    security_opt:
      - no-new-privileges:true
    environment:
      - POSTGRES_DB=mealie
      - POSTGRES_USER=mealie
      - POSTGRES_PASSWORD=${DB_USER_PASS}
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8 --lc-collate=C --lc-ctype=C
    volumes:
      - mealie-database:/var/lib/postgresql/data
      - /etc/localtime:/etc/localtime:ro
    networks:
      - internal
    labels:
      - "traefik.enable=false"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
    restart: unless-stopped

  mealie-app:
    container_name: mealie-app
    image: hkotel/mealie:latest
    security_opt:
      - no-new-privileges:true
    depends_on:
      - mealie-db
    environment:
      PUID: ${PUID}
      PGID: ${PGID}
      TZ: Europe/Amsterdam

      # Database Settings
      DB_ENGINE: postgres
      POSTGRES_USER: mealie
      POSTGRES_PASSWORD: ${DB_USER_PASS}
      POSTGRES_SERVER: mealie-db
      POSTGRES_PORT: 5432
      POSTGRES_DB: mealie

      # Default Recipe Settings
      RECIPE_PUBLIC: 'true'
      RECIPE_SHOW_NUTRITION: 'true'
      RECIPE_SHOW_ASSETS: 'true'
      RECIPE_LANDSCAPE_VIEW: 'true'
      RECIPE_DISABLE_COMMENTS: 'false'
      RECIPE_DISABLE_AMOUNT: 'false'

      # Gunicorn
      WEB_CONCURRENCY: 2
      # WORKERS_PER_CORE: 0.5
      # MAX_WORKERS: 8
    volumes:
      - mealie-data:/app/data
    labels:
      - traefik.enable=true
      - traefik.http.routers.mealie-app.entrypoints=http
      - traefik.http.routers.mealie-app.rule=Host(`${SUBDOMAIN}.${DOMAIN}`)
      - traefik.http.routers.mealie-app-secure.entrypoints=https
      - traefik.http.routers.mealie-app-secure.rule=Host(`${SUBDOMAIN}.${DOMAIN}`)
      - traefik.http.routers.mealie-app-secure.tls=true
      - traefik.http.routers.mealie-app-secure.tls.certresolver=le-dns
      - traefik.http.routers.mealie-app-secure.service=mealie-app
      - traefik.http.routers.mealie-app-secure.middlewares=https_redirect@docker,non_www@docker,sec_headers@docker,gzip_compress@docker
      - traefik.http.services.mealie-app.loadbalancer.server.port=80
    networks:
      - internal
      - proxy
    restart: unless-stopped