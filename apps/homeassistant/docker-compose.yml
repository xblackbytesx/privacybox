name: homeassistant

volumes:
  ha-mariadb:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${DOCKER_ROOT}/homeassistant/database      

  ha-mosquitto-config:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${DOCKER_ROOT}/homeassistant/mosquitto/config

  ha-mosquitto-data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${DOCKER_ROOT}/homeassistant/mosquitto/data

  ha-zigbee2mqtt-data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${DOCKER_ROOT}/homeassistant/zigbee2mqtt/data

  ha-config:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${DOCKER_ROOT}/homeassistant/config

services:
  ha-mariadb:
    container_name: ha-mariadb
    image: mariadb:latest
    security_opt:
      - no-new-privileges:true
    environment:
      - MYSQL_ROOT_PASSWORD=${DB_ROOT_PASS}
      - MYSQL_DATABASE=homeassistant
      - MYSQL_USER=homeassistant
      - MYSQL_PASSWORD=${DB_USER_PASS}
      - TZ=${TIMEZONE}
    volumes:
      - ha-mariadb:/var/lib/mysql
      - /etc/localtime:/etc/localtime:ro
    ports:
      - "3306:3306"
    networks:
      - internal
    labels:
      - "traefik.enable=false"
    healthcheck:
      test: [ "CMD", "mysqladmin" ,"ping", "-h", "localhost" ]
      timeout: 20s
      interval: 15s
      retries: 30
    restart: unless-stopped

  ha-mqtt:
    container_name: ha-mqtt
    image: eclipse-mosquitto:latest
    security_opt:
      - no-new-privileges:true
    volumes:
      - ha-mosquitto-config:/mosquitto/config
      - ha-mosquitto-data:/mosquitto/data
      - /etc/localtime:/etc/localtime:ro
    ports:
      - "1883:1883"
    networks:
      - internal
    environment:
      - TZ=${TIMEZONE}
    labels:
      - "traefik.enable=false"
    restart: unless-stopped

  ha-zigbee2mqtt:
    container_name: ha-zigbee2mqtt
    image: koenkk/zigbee2mqtt:latest
    security_opt:
      - no-new-privileges:true
    depends_on:
      - ha-mqtt
    environment:
      - TZ=${TIMEZONE}
    volumes:
      - ha-zigbee2mqtt-data:/app/data
      - /etc/localtime:/etc/localtime:ro
    # Map local /dev mountpoint to docker
    devices:
      - ${ZIGBEE_DEVICE_MOUNT}:/dev/ttyZigbee
    ports:
      - "8099:8099"
    networks:
      - internal
      - proxy
    labels:
      - traefik.enable=true
      - traefik.http.routers.ha-zigbee2mqtt-secure.entrypoints=websecure
      - traefik.http.routers.ha-zigbee2mqtt-secure.rule=Host(`zigbee.hass.${SUBDOMAIN}.${DOMAIN}`)
      - traefik.http.routers.ha-zigbee2mqtt-secure.tls=true
      - traefik.http.routers.ha-zigbee2mqtt-secure.tls.certresolver=${CERT_RESOLVER}
      - traefik.http.routers.ha-zigbee2mqtt-secure.service=ha-zigbee2mqtt
      - traefik.http.routers.ha-zigbee2mqtt-secure.middlewares=https-redirect@file,non-www@file,secure-headers@file,gzip-compress@file
      - traefik.http.services.ha-zigbee2mqtt.loadbalancer.server.port=8099
    restart: unless-stopped

  ha-app:
    container_name: ha-app
    image: homeassistant/home-assistant:latest
    security_opt:
      - no-new-privileges:true
    environment:
      - TZ=${TIMEZONE}
    # Map local /dev mountpoint to docker
    devices:
      - ${RFX_DEVICE_MOUNT}:/dev/ttyRFXtrx
    volumes:
      - ha-config:/config
      - /sys/class/thermal:/sys/class/thermal
      - /etc/localtime:/etc/localtime:ro
    depends_on:
      - ha-mariadb
      - ha-mqtt
      - ha-zigbee2mqtt
    networks:
      - internal
      - proxy
    labels:
      - traefik.enable=true
      - traefik.http.routers.ha-app-secure.entrypoints=websecure
      - traefik.http.routers.ha-app-secure.rule=Host(`${SUBDOMAIN}.${DOMAIN}`)
      - traefik.http.routers.ha-app-secure.tls=true
      - traefik.http.routers.ha-app-secure.tls.certresolver=${CERT_RESOLVER}
      - traefik.http.routers.ha-app-secure.service=ha-app
      - traefik.http.routers.ha-app-secure.middlewares=https-redirect@file,non-www@file,secure-headers@file,gzip-compress@file
      - traefik.http.services.ha-app.loadbalancer.server.port=8123
    restart: unless-stopped