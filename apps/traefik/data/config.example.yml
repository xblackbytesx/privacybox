http:
  # # Example of using Traefik to statically route and proxy network endpoints outside Traefik control.
  # # This is useful for proxying routers, nas-drives or even host-mode docker containers on localhost.
  # routers:
  #   router-homeassistant:
  #     entryPoints:
  #       - https
  #     rule: Host(`hass.privacy.box`)
  #     middlewares: 
  #       - https_redirect@docker
  #       - non_www@docker
  #       - sec_headers@docker
  #       - gzip_compress@docker
  #     service: service-homeassistant
  #     tls:
  #       certResolver: le-dns
  #   router-jellyfin:
  #     entryPoints:
  #       - https
  #     rule: Host(`jellyfin.privacy.box`)
  #     middlewares: 
  #       - https_redirect@docker
  #       - non_www@docker
  #       - sec_headers@docker
  #       - gzip_compress@docker
  #     service: service-jellyfin
  #     tls:
  #       certResolver: le-dns
  #   router-transmission:
  #     entryPoints:
  #       - https
  #     rule: Host(`transmission.privacy.box`)
  #     middlewares: 
  #       - https_redirect@docker
  #       - non_www@docker
  #       - sec_headers@docker
  #       - gzip_compress@docker
  #     service: service-transmission
  #     tls:
  #       certResolver: le-dns
  #   router-nzbget:
  #     entryPoints:
  #       - https
  #     rule: Host(`nzbget.privacy.box`)
  #     middlewares: 
  #       - https_redirect@docker
  #       - non_www@docker
  #       - sec_headers@docker
  #       - gzip_compress@docker
  #     service: service-nzbget
  #     tls:
  #       certResolver: le-dns
  #   router-jackett:
  #     entryPoints:
  #       - https
  #     rule: Host(`jackett.privacy.box`)
  #     middlewares: 
  #       - https_redirect@docker
  #       - non_www@docker
  #       - sec_headers@docker
  #       - gzip_compress@docker
  #     service: service-jackett
  #     tls:
  #       certResolver: le-dns
  #   router-prowlarr:
  #     entryPoints:
  #       - https
  #     rule: Host(`prowlarr.privacy.box`)
  #     middlewares: 
  #       - https_redirect@docker
  #       - non_www@docker
  #       - sec_headers@docker
  #       - gzip_compress@docker
  #     service: service-prowlarr
  #     tls:
  #       certResolver: le-dns
  #   router-sonarr:
  #     entryPoints:
  #       - https
  #     rule: Host(`sonarr.privacy.box`)
  #     middlewares: 
  #       - https_redirect@docker
  #       - non_www@docker
  #       - sec_headers@docker
  #       - gzip_compress@docker
  #     service: service-sonarr
  #     tls:
  #       certResolver: le-dns
  #   router-radarr:
  #     entryPoints:
  #       - https
  #     rule: Host(`radarr.privacy.box`)
  #     middlewares: 
  #       - https_redirect@docker
  #       - non_www@docker
  #       - sec_headers@docker
  #       - gzip_compress@docker
  #     service: service-radarr
  #     tls:
  #       certResolver: le-dns
  #   router-readarr:
  #     entryPoints:
  #       - https
  #     rule: Host(`readarr.privacy.box`)
  #     middlewares: 
  #       - https_redirect@docker
  #       - non_www@docker
  #       - sec_headers@docker
  #       - gzip_compress@docker
  #     service: service-readarr
  #     tls:
  #       certResolver: le-dns
  #   router-lidarr:
  #     entryPoints:
  #       - https
  #     rule: Host(`lidarr.privacy.box`)
  #     middlewares: 
  #       - https_redirect@docker
  #       - non_www@docker
  #       - sec_headers@docker
  #       - gzip_compress@docker
  #     service: service-lidarr
  #     tls:
  #       certResolver: le-dns
  #   router-spotweb:
  #     entryPoints:
  #       - https
  #     rule: Host(`spotweb.privacy.box`)
  #     middlewares: 
  #       - https_redirect@docker
  #       - non_www@docker
  #       - sec_headers@docker
  #       - gzip_compress@docker
  #     service: service-spotweb
  #     tls:
  #       certResolver: le-dns

  # services:
  #   service-homeassistant:
  #     loadBalancer:
  #       servers:
  #       - url: "http://10.0.200.5:8123"
  #   service-jellyfin:
  #     loadBalancer:
  #       servers:
  #       - url: "http://10.0.200.5:8096"
  #   service-transmission:
  #     loadBalancer:
  #       servers:
  #       - url: "http://10.0.200.5:9091"
  #   service-nzbget:
  #     loadBalancer:
  #       servers:
  #       - url: "http://10.0.200.5:6789"
  #   service-jackett:
  #     loadBalancer:
  #       servers:
  #       - url: "http://10.0.200.5:9117"
  #   service-prowlarr:
  #     loadBalancer:
  #       servers:
  #       - url: "http://10.0.200.5:9696"
  #   service-sonarr:
  #     loadBalancer:
  #       servers:
  #       - url: "http://10.0.200.5:8989"
  #   service-radarr:
  #     loadBalancer:
  #       servers:
  #       - url: "http://10.0.200.5:7878"
  #   service-readarr:
  #     loadBalancer:
  #       servers:
  #       - url: "http://10.0.200.5:8787"
  #   service-lidarr:
  #     loadBalancer:
  #       servers:
  #       - url: "http://10.0.200.5:8686"
  #   service-spotweb:
  #     loadBalancer:
  #       servers:
  #       - url: "http://10.0.200.5:2354"