version: '3.5'

networks:
  proxy:
    name: proxy
    external: true
  internal:
    internal: true

volumes:
  photoprism-database:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${DOCKER_ROOT}/photoprism/database
  photoprism-data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${DOCKER_ROOT}/photoprism/data
  photoprism-stories:
    driver: local
    driver_opts:
      type: ${STORIES_DRIVER_OPT_TYPE}
      o: ${STORIES_DRIVER_OPT_O}
      device: ${STORIES_PATH}

services:
  photoprism-db:
    container_name: photoprism-db
    image: mariadb:11
    security_opt:
      - no-new-privileges:true
      - seccomp:unconfined
      - apparmor:unconfined
    networks:
      - internal
    command: --innodb-buffer-pool-size=512M --transaction-isolation=READ-COMMITTED --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci --max-connections=512 --innodb-rollback-on-timeout=OFF --innodb-lock-wait-timeout=120
    environment:
      - MARIADB_AUTO_UPGRADE=1
      - MARIADB_INITDB_SKIP_TZINFO=1
      - MYSQL_ROOT_PASSWORD=${DB_ROOT_PASS}
      - MYSQL_DATABASE=photoprism
      - MYSQL_USER=photoprism
      - MYSQL_PASSWORD=${DB_USER_PASS}
    volumes:
      - photoprism-database:/var/lib/mysql
      - /etc/localtime:/etc/localtime:ro
    labels:
      - "traefik.enable=false"
    healthcheck:
      test: [ "CMD", "mysqladmin" ,"ping", "-h", "localhost" ]
      timeout: 20s
      interval: 15s
      retries: 30
    restart: unless-stopped
    stop_grace_period: 5s

  photoprism-app:
    container_name: photoprism-app
    image: photoprism/photoprism:latest
    security_opt:
      - no-new-privileges:true
      - seccomp:unconfined
      - apparmor:unconfined
    environment:
      - PHOTOPRISM_UID=${PUID}
      - PHOTOPRISM_GID=${PGID}
      # - PHOTOPRISM_UMASK=0000
      - PHOTOPRISM_ADMIN_USER=${ADMIN_USER_NAME}
      - PHOTOPRISM_ADMIN_PASSWORD=${ADMIN_USER_PASS}
      - PHOTOPRISM_AUTH_MODE=${AUTH_MODE}
      - PHOTOPRISM_SITE_URL=https://${SUBDOMAIN}.${DOMAIN}/
      - PHOTOPRISM_DISABLE_TLS=true
      - PHOTOPRISM_DEFAULT_TLS=false
      - PHOTOPRISM_ORIGINALS_LIMIT=${ORIGINALS_LIMIT}
      - PHOTOPRISM_HTTP_COMPRESSION=gzip
      - PHOTOPRISM_LOG_LEVEL=info
      - PHOTOPRISM_READONLY=true # Don't modify originals directory (reduced functionality)
      - PHOTOPRISM_EXPERIMENTAL=false
      - PHOTOPRISM_DISABLE_CHOWN=true
      - PHOTOPRISM_DISABLE_WEBDAV=true
      - PHOTOPRISM_DISABLE_SETTINGS=false
      - PHOTOPRISM_DISABLE_TENSORFLOW=false
      - PHOTOPRISM_DISABLE_FACES=false
      - PHOTOPRISM_DISABLE_CLASSIFICATION=false
      - PHOTOPRISM_DISABLE_VECTORS=true
      - PHOTOPRISM_DISABLE_RAW=false
      - PHOTOPRISM_RAW_PRESETS=false
      - PHOTOPRISM_JPEG_QUALITY=85
      - PHOTOPRISM_DETECT_NSFW=false
      - PHOTOPRISM_UPLOAD_NSFW=true
      - PHOTOPRISM_DATABASE_DRIVER=mysql
      - PHOTOPRISM_DATABASE_SERVER=photoprism-db:3306
      - PHOTOPRISM_DATABASE_NAME=photoprism
      - PHOTOPRISM_DATABASE_USER=photoprism
      - PHOTOPRISM_DATABASE_PASSWORD=${DB_USER_PASS}
      - PHOTOPRISM_SITE_CAPTION=AI-Powered Photos App
      - PHOTOPRISM_SITE_DESCRIPTION=
      - PHOTOPRISM_SITE_AUTHOR=
      ## Video Transcoding (https://docs.photoprism.app/getting-started/advanced/transcoding/):
      # - PHOTOPRISM_FFMPEG_ENCODER=software"        # H.264/AVC encoder (software, intel, nvidia, apple, raspberry, or vaapi)
      # - PHOTOPRISM_FFMPEG_SIZE=1920"               # video size limit in pixels (720-7680) (default: 3840)
      # - PHOTOPRISM_FFMPEG_BITRATE=32"              # video bitrate limit in Mbit/s (default: 50)
      ## Run/install on first startup (options: update https gpu tensorflow davfs clitools clean):
      # - PHOTOPRISM_INIT=https gpu tensorflow"
    # # Share hardware devices with FFmpeg and TensorFlow (optional):
    # devices:
    #  - "/dev/dri:/dev/dri"                         # Intel QSV
    #  - "/dev/nvidia0:/dev/nvidia0"                 # Nvidia CUDA
    #  - "/dev/nvidiactl:/dev/nvidiactl"
    #  - "/dev/nvidia-modeset:/dev/nvidia-modeset"
    #  - "/dev/nvidia-nvswitchctl:/dev/nvidia-nvswitchctl"
    #  - "/dev/nvidia-uvm:/dev/nvidia-uvm"
    #  - "/dev/nvidia-uvm-tools:/dev/nvidia-uvm-tools"
    #  - "/dev/video11:/dev/video11"                 # Video4Linux Video Encode Device (h264_v4l2m2m)
    working_dir: "/photoprism"
    volumes:
      - photoprism-stories:/photoprism/originals:${STORIES_DIR_PERMISSION}
      - photoprism-data:/photoprism/storage
      - /etc/localtime:/etc/localtime:ro
    labels:
      - traefik.enable=true
      - traefik.http.routers.photoprism-app.entrypoints=http
      - traefik.http.routers.photoprism-app.rule=Host(`${SUBDOMAIN}.${DOMAIN}`)
      - traefik.http.routers.photoprism-app-secure.entrypoints=https
      - traefik.http.routers.photoprism-app-secure.rule=Host(`${SUBDOMAIN}.${DOMAIN}`)
      - traefik.http.routers.photoprism-app-secure.tls=true
      - traefik.http.routers.photoprism-app-secure.tls.certresolver=le-dns
      - traefik.http.routers.photoprism-app-secure.service=photoprism-app
      - traefik.http.routers.photoprism-app-secure.middlewares=https_redirect@docker,non_www@docker,sec_headers@docker,gzip_compress@docker
      - traefik.http.services.photoprism-app.loadbalancer.server.port=2342
    networks:
      - internal
      - proxy
    depends_on:
      - photoprism-db
    # Only enable automatic restarts once your installation is properly
    # configured as it otherwise may get stuck in a restart loop:
    # https://docs.photoprism.org/getting-started/faq/#why-is-photoprism-getting-stuck-in-a-restart-loop
    # restart: unless-stopped
    stop_grace_period: 10s
