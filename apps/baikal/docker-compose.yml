version: "3"

networks:
  proxy:
    name: proxy
    external: true

volumes:
  baikal-config:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${DOCKER_ROOT}/baikal/config
  baikal-data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${DOCKER_ROOT}/baikal/data
  baikal-database:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${DOCKER_ROOT}/baikal/database

services:
  # baikal-db:
  #     container_name: baikal-db
  #     image: mariadb:latest
  #     security_opt:
  #         - no-new-privileges:true
  #     environment:
  #         - MYSQL_ROOT_PASSWORD=${DB_ROOT_PASS}
  #     volumes:
  #         - baikal-database:/var/lib/mysql
  #         - /etc/localtime:/etc/localtime:ro
  #     labels:
  #         - "traefik.enable=false"
  #     networks:
  #         - internal
  #     healthcheck:
  #         test: [ "CMD", "mysqladmin" ,"ping", "-h", "localhost" ]
  #         timeout: 20s
  #         interval: 15s
  #         retries: 30
  #     restart: unless-stopped

  baikal:
    container_name: baikal
    image: ckulka/baikal:nginx
    security_opt:
      - no-new-privileges:true
    volumes:
      - baikal-config:/var/www/baikal/config
      - baikal-data:/var/www/baikal/Specific
      - /etc/localtime:/etc/localtime:ro
    labels:
      - traefik.enable=true
      - traefik.http.routers.baikal.entrypoints=http
      - traefik.http.routers.baikal.rule=Host(`${SUBDOMAIN}.${DOMAIN}`)
      - traefik.http.routers.baikal-secure.entrypoints=https
      - traefik.http.routers.baikal-secure.rule=Host(`${SUBDOMAIN}.${DOMAIN}`)
      - traefik.http.routers.baikal-secure.tls=true
      - traefik.http.routers.baikal-secure.tls.certresolver=le-dns
      - traefik.http.routers.baikal-secure.service=baikal
      - traefik.http.routers.baikal-secure.middlewares=https_redirect@docker,non_www@docker,sec_headers@docker,gzip_compress@docker
      - traefik.http.services.baikal.loadbalancer.server.port=80
    networks:
      - proxy
    restart: unless-stopped
