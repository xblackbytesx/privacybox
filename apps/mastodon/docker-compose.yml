name: mastodon

networks:
  proxy:
    name: proxy
    external: true
  internal:
    internal: true

volumes:
  mastodon-database:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${DOCKER_ROOT}/mastodon/database
  mastodon-redis:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${DOCKER_ROOT}/mastodon/redis
  # mastodon-elasticsearch:
  #   driver: local
  #   driver_opts:
  #     type: none
  #     o: bind
  #     device: ${DOCKER_ROOT}/mastodon/elasticsearch
  mastodon-config:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${DOCKER_ROOT}/mastodon/config

services:
  mastodon-db:
    container_name: mastodon-db
    image: postgres:17-alpine
    security_opt:
      - no-new-privileges:true
    shm_size: 256mb
    healthcheck:
      test: ['CMD', 'pg_isready', '-U', 'postgres']
    volumes:
      - mastodon-database:/var/lib/postgresql/data
      - /etc/localtime:/etc/localtime:ro
    environment:
      POSTGRES_HOST_AUTH_METHOD: trust
      POSTGRES_DB: mastodon
      POSTGRES_USER: mastodon
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    networks:
      - internal
    restart: unless-stopped

  mastodon-redis:
    container_name: mastodon-redis
    image: redis:7-alpine
    security_opt:
      - no-new-privileges:true
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
    volumes:
      - mastodon-redis:/data
      - /etc/localtime:/etc/localtime:ro
    networks:
      - internal
    restart: unless-stopped

  # # Enable this on beefy hardware only, this is quite CPU and RAM intensive.
  # mastodon-es:
  #   container_name: mastodon-es
  #   image: docker.elastic.co/elasticsearch/elasticsearch:7.17.4
  #   security_opt:
  #     - no-new-privileges:true
  #   environment:
  #     - "ES_JAVA_OPTS=-Xms512m -Xmx512m -Des.enforce.bootstrap.checks=true"
  #     - "xpack.license.self_generated.type=basic"
  #     - "xpack.security.enabled=false"
  #     - "xpack.watcher.enabled=false"
  #     - "xpack.graph.enabled=false"
  #     - "xpack.ml.enabled=false"
  #     - "bootstrap.memory_lock=true"
  #     - "cluster.name=es-mastodon"
  #     - "discovery.type=single-node"
  #     - "thread_pool.write.queue_size=1000"
  #   healthcheck:
  #     test: ["CMD-SHELL", "curl --silent --fail localhost:9200/_cluster/health || exit 1"]
  #   volumes:
  #     - mastodon-elasticsearch:/usr/share/elasticsearch/data
  #     - /etc/localtime:/etc/localtime:ro
  #   ulimits:
  #     memlock:
  #       soft: -1
  #       hard: -1
  #     nofile:
  #       soft: 65536
  #       hard: 65536
  #   networks:
  #     - proxy
  #     - internal
  #   restart: unless-stopped

  mastodon-app:
    container_name: mastodon-app
    image: lscr.io/linuxserver/mastodon:latest
    security_opt:
      - no-new-privileges:true
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TIMEZONE}
      - LOCAL_DOMAIN=${SUBDOMAIN:+${SUBDOMAIN}.}${DOMAIN}
      - REDIS_HOST=mastodon-redis
      - REDIS_PORT=6379
      - DB_HOST=mastodon-db
      - DB_USER=mastodon
      - DB_NAME=mastodon
      - DB_PASS=${DB_PASSWORD}
      - DB_PORT=5432
      - ES_ENABLED=false
      - ACTIVE_RECORD_ENCRYPTION_PRIMARY_KEY=${ACTIVE_RECORD_ENCRYPTION_PRIMARY_KEY}
      - ACTIVE_RECORD_ENCRYPTION_DETERMINISTIC_KEY=${ACTIVE_RECORD_ENCRYPTION_DETERMINISTIC_KEY}
      - ACTIVE_RECORD_ENCRYPTION_KEY_DERIVATION_SALT=${ACTIVE_RECORD_ENCRYPTION_KEY_DERIVATION_SALT}
      - SECRET_KEY_BASE=${SECRET_KEY_BASE}
      - OTP_SECRET=${OTP_SECRET}
      - VAPID_PRIVATE_KEY=${VAPID_PRIVATE_KEY}
      - VAPID_PUBLIC_KEY=${VAPID_PUBLIC_KEY}
      - SMTP_SERVER=${SMTP_HOST}
      - SMTP_ENABLE_STARTTLS=${SMTP_ENABLE_STARTTLS}
      - SMTP_PORT=${SMTP_PORT}
      - SMTP_LOGIN=${SMTP_USER}
      - SMTP_PASSWORD=${SMTP_PASS}
      - SMTP_FROM_ADDRESS=${SMTP_FROM_MAIL}
      - S3_ENABLED=false
      - WEB_DOMAIN=${SUBDOMAIN:+${SUBDOMAIN}.}${DOMAIN}
      - ES_HOST=es #optional
      - ES_PORT=9200 #optional
      - ES_USER=elastic #optional
      - ES_PASS=elastic #optional
      - S3_BUCKET= #optional
      - AWS_ACCESS_KEY_ID= #optional
      - AWS_SECRET_ACCESS_KEY= #optional
      - S3_ALIAS_HOST= #optional
      - SIDEKIQ_ONLY=false #optional
      - SIDEKIQ_QUEUE= #optional
      - SIDEKIQ_DEFAULT=false #optional
      - SIDEKIQ_THREADS=5 #optional
      - DB_POOL=5 #optional
      - NO_CHOWN= #optional
    depends_on:
      - mastodon-db
      - mastodon-redis
    volumes:
      - mastodon-config:/config
      - /etc/localtime:/etc/localtime:ro
    labels:
      - traefik.enable=true
      - traefik.http.routers.mastodon-app-secure.entrypoints=websecure
      - traefik.http.routers.mastodon-app-secure.rule=Host(`${SUBDOMAIN:+${SUBDOMAIN}.}${DOMAIN}`)
      - traefik.http.routers.mastodon-app-secure.tls=true
      - traefik.http.routers.mastodon-app-secure.tls.certresolver=${CERT_RESOLVER}
      - traefik.http.routers.mastodon-app-secure.service=mastodon-app
      - traefik.http.routers.mastodon-app-secure.middlewares=https-redirect@file,non-www@file,secure-headers@file,gzip-compress@file
      - traefik.http.services.mastodon-app.loadbalancer.serverstransport=ignorecert@file
      - traefik.http.services.mastodon-app.loadbalancer.server.scheme=https
      - traefik.http.services.mastodon-app.loadbalancer.server.port=443
    networks:
      - internal
      - proxy
    restart: unless-stopped
