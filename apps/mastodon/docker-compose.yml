version: '3'

networks:
  proxy:
    name: proxy
    external: true
  internal:
    internal: true

volumes:
  mastodon-database:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${DOCKER_ROOT}/mastodon/database

services:

  mastodon-db:
    container_name: "mastodon-db"
    image: "postgres:12-alpine"
    security_opt:
      - no-new-privileges:true
    shm_size: 256mb
    environment:
      - POSTGRES_DB=mastodon
      - POSTGRES_USER=mastodon
      - POSTGRES_PASSWORD=${DB_USER_PASS}
    volumes:
      - mastodon-database:/var/lib/postgresql/data
      - /etc/localtime:/etc/localtime:ro
    labels:
      - "traefik.enable=false"
    networks:
      - internal
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
    restart: unless-stopped  

  mastodon-redis:
    image: redis:6-alpine
    security_opt:
      - no-new-privileges:true
    networks:
      - internal
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
    volumes:
      - ./redis:/data
      - /etc/localtime:/etc/localtime:ro
    labels:
      - "traefik.enable=false"
    restart: unless-stopped

#  mastodon-es:
#    image: docker.elastic.co/elasticsearch/elasticsearch-oss:6.8.10
#    security_opt:
#      - no-new-privileges:true
#    environment:
#      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
#      - "cluster.name=es-mastodon"
#      - "discovery.type=single-node"
#      - "bootstrap.memory_lock=true"
#    networks:
#      - internal
#    healthcheck:
#      test: ["CMD-SHELL", "curl --silent --fail localhost:9200/_cluster/health || exit 1"]
#    volumes:
#      - ./elasticsearch:/usr/share/elasticsearch/data
#      - /etc/localtime:/etc/localtime:ro
#    ulimits:
#      memlock:
#        soft: -1
#        hard: -1
#    labels:
#      - "traefik.enable=false"
#    restart: unless-stopped

  mastodon-app:
    image: tootsuite/mastodon
    security_opt:
      - no-new-privileges:true
    command: bash -c "rm -f /mastodon/tmp/pids/server.pid; bundle exec rails s -p 3000"
    networks:
      - proxy
      - internal
    # healthcheck:
    #   test: ["CMD-SHELL", "wget -q --spider --proxy=off localhost:3000/health || exit 1"]
    environment:
      - DB_HOST=mastodon-db
      - DB_PORT=5432
      - DB_CONNECTION=pgsql
      - DB_DATABASE=mastodon
      - DB_USERNAME=mastodon
      - DB_PASSWORD=${DB_USER_PASS}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.mastodon-app.entrypoints=http"
      - "traefik.http.routers.mastodon-app.rule=Host(`${SUBDOMAIN}.${DOMAIN}`)"
      - "traefik.http.routers.mastodon-app.middlewares=secured@file"
      - "traefik.http.routers.mastodon-app-secure.entrypoints=https"
      - "traefik.http.routers.mastodon-app-secure.rule=Host(`${SUBDOMAIN}.${DOMAIN}`)"
      - "traefik.http.routers.mastodon-app-secure.tls=true"
      - "traefik.http.routers.mastodon-app-secure.tls.certresolver=le-dns"
      - "traefik.http.routers.mastodon-app-secure.service=mastodon-app"
      - "traefik.http.services.mastodon-app.loadbalancer.server.port=3000"
    depends_on:
      - mastodon-db
      - mastodon-redis
      # - mastodon-es
    volumes:
      - ./public/system:/mastodon/public/system
      - /etc/localtime:/etc/localtime:ro
    restart: unless-stopped

  mastodon-streaming:
    image: tootsuite/mastodon
    security_opt:
      - no-new-privileges:true
    command: node ./streaming
    networks:
      - proxy
      - internal
    # healthcheck:
    #   test: ["CMD-SHELL", "wget -q --spider --proxy=off localhost:4000/api/v1/streaming/health || exit 1"]
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.mastodon-streaming.entrypoints=http"
      - "traefik.http.routers.mastodon-streaming.rule=Host(`${SUBDOMAIN}-streaming.${DOMAIN}`)"
      - "traefik.http.routers.mastodon-streaming.middlewares=secured@file"
      - "traefik.http.routers.mastodon-streaming-secure.entrypoints=https"
      - "traefik.http.routers.mastodon-streaming-secure.rule=Host(`${SUBDOMAIN}-streaming.${DOMAIN}`)"
      - "traefik.http.routers.mastodon-streaming-secure.tls=true"
      - "traefik.http.routers.mastodon-streaming-secure.tls.certresolver=le-dns"
      - "traefik.http.routers.mastodon-streaming-secure.service=mastodon-streaming"
      - "traefik.http.services.mastodon-streaming.loadbalancer.server.port=4000"
    environment:
      - DB_HOST=mastodon-db
      - DB_PORT=5432
      - DB_CONNECTION=pgsql
      - DB_DATABASE=mastodon
      - DB_USERNAME=mastodon
      - DB_PASSWORD=${DB_USER_PASS}
    depends_on:
      - mastodon-db
      - mastodon-redis
    volumes:
      - /etc/localtime:/etc/localtime:ro
    restart: unless-stopped

  mastodon-sidekiq:
    image: tootsuite/mastodon
    security_opt:
      - no-new-privileges:true
    command: bundle exec mastodon-sidekiq
    depends_on:
      - mastodon-db
      - mastodon-redis
    networks:
      - proxy
      - internal
    volumes:
      - ./public/system:/mastodon/public/system
      - /etc/localtime:/etc/localtime:ro
    labels:
      - "traefik.enable=false"
    environment:
      - DB_HOST=mastodon-db
      - DB_PORT=5432
      - DB_CONNECTION=pgsql
      - DB_DATABASE=mastodon
      - DB_USERNAME=mastodon
      - DB_PASSWORD=${DB_USER_PASS}
    restart: unless-stopped

## Uncomment to enable federation with tor instances along with adding the following ENV variables
## http_proxy=http://privoxy:8118
## ALLOW_ACCESS_TO_HIDDEN_SERVICE=true
#  mastodon-tor:
#    image: sirboops/tor
#    security_opt:
#      - no-new-privileges:true
#    networks:
#      - proxy
#      - internal
#    labels:
#      - "traefik.enable=false"
#    restart: unless-stopped

#  mastodon-privoxy:
#    image: sirboops/privoxy
#    security_opt:
#      - no-new-privileges:true
#    volumes:
#      - ./priv-config:/opt/config
#      - /etc/localtime:/etc/localtime:ro
#    networks:
#      - proxy
#      - internal
#    labels:
#      - "traefik.enable=false"
#    restart: unless-stopped
