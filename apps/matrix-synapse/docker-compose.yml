version: '3.3'

networks:
  proxy:
    name: proxy
    external: true
  internal:
    internal: true

volumes:
  synapse-database:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${DOCKER_ROOT}/matrix/synapse/database
  synapse-data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${DOCKER_ROOT}/matrix/synapse/data

services:
  matrix-synapse-db:
    container_name: matrix-synapse-db
    image: postgres:12-alpine
    security_opt:
      - no-new-privileges:true
    environment:
      - POSTGRES_DB=synapse
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_USER_PASS}
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8 --lc-collate=C --lc-ctype=C
    volumes:
      - synapse-database:/var/lib/postgresql/data
      - /etc/localtime:/etc/localtime:ro
    networks:
      - internal
    labels:
      - "traefik.enable=false"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
    restart: unless-stopped

  matrix-synapse-redis:
    container_name: matrix-synapse-redis
    image: redis:alpine
    security_opt:
      - no-new-privileges:true
    networks: 
      - internal
    volumes:
      - /etc/localtime:/etc/localtime:ro
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
    labels:
      - "traefik.enable=false"
    restart: unless-stopped

  matrix-synapse:
    container_name: matrix-synapse
    image: matrixdotorg/synapse:latest
    security_opt:
      - no-new-privileges:true
    environment:
      # - SYNAPSE_CONFIG_DIR="/data"
      # - SYNAPSE_CONFIG_PATH="/data/homeserver.yaml"
      # - SYNAPSE_SERVER_NAME=matrix.${DOMAIN}
      # - SYNAPSE_REPORT_STATS=no
      - UID=1000
      - GID=1000
      - TZ="Europe/Amsterdam"
    volumes:
      - synapse-data:/data
      - /etc/localtime:/etc/localtime:ro
    depends_on:
      - matrix-synapse-db
      - matrix-synapse-redis
    networks:
      - proxy
      - internal
    labels:
      - traefik.enable=true
      - traefik.http.routers.matrix-synapse.entrypoints=http
      - traefik.http.routers.matrix-synapse.rule=Host(`synapse.${DOMAIN}`)
      - traefik.http.routers.matrix-synapse-secure.entrypoints=https
      - traefik.http.routers.matrix-synapse-secure.rule=Host(`synapse.${DOMAIN}`)
      - traefik.http.routers.matrix-synapse-secure.tls=true
      - traefik.http.routers.matrix-synapse-secure.tls.certresolver=le-dns
      - traefik.http.routers.matrix-synapse-secure.service=matrix-synapse
      - traefik.http.routers.matrix-synapse-secure.middlewares=https_redirect@docker,non_www@docker,sec_headers@docker,gzip_compress@docker
      - traefik.http.services.matrix-synapse.loadbalancer.server.port=8008 
    restart: unless-stopped

  # Enable this to enable federation
  matrix-nginx:
    container_name: matrix-nginx
    image: "nginx:latest"
    security_opt:
      - no-new-privileges:true
    volumes:
      - ${DOCKER_ROOT}/matrix/nginx/matrix.conf:/etc/nginx/conf.d/matrix.conf
      - ${DOCKER_ROOT}/matrix/nginx/www:/var/www/
      - /etc/localtime:/etc/localtime:ro
    networks:
      - proxy
      - internal
    labels:
      - traefik.enable=true
      - traefik.http.routers.matrix-nginx.entrypoints=http
      - traefik.http.routers.matrix-nginx.rule=Host(`matrix.${DOMAIN}`)
      - traefik.http.routers.matrix-nginx-secure.entrypoints=https
      - traefik.http.routers.matrix-nginx-secure.rule=Host(`matrix.${DOMAIN}`)
      - traefik.http.routers.matrix-nginx-secure.tls=true
      - traefik.http.routers.matrix-nginx-secure.tls.certresolver=le-dns
      - traefik.http.routers.matrix-nginx-secure.service=matrix-nginx
      - traefik.http.routers.matrix-nginx-secure.middlewares=https_redirect@docker,non_www@docker,sec_headers@docker,gzip_compress@docker
      - traefik.http.services.matrix-nginx.loadbalancer.server.port=80
    restart: "unless-stopped"

  matrix-element:
    container_name: matrix-element
    image: "vectorim/element-web:latest"
    volumes:
      - "${DOCKER_ROOT}/matrix/element/data/config.json:/app/config.json:ro"
    labels:
      - traefik.enable=true
      - traefik.http.routers.matrix-element.entrypoints=http
      - traefik.http.routers.matrix-element.rule=Host(`element.${DOMAIN}`)
      - traefik.http.routers.matrix-element-secure.entrypoints=https
      - traefik.http.routers.matrix-element-secure.rule=Host(`element.${DOMAIN}`)
      - traefik.http.routers.matrix-element-secure.tls=true
      - traefik.http.routers.matrix-element-secure.tls.certresolver=le-dns
      - traefik.http.routers.matrix-element-secure.service=matrix-element
      - traefik.http.routers.matrix-element-secure.middlewares=https_redirect@docker,non_www@docker,sec_headers@docker,gzip_compress@docker
      - traefik.http.services.matrix-element.loadbalancer.server.port=80