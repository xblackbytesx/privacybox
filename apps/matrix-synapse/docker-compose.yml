version: '3.3'

networks:
  proxy:
    name: proxy
    external: true
  internal:
    internal: true

volumes:
  synapse-database:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${DOCKER_ROOT}/synapse/database
  synapse-data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${DOCKER_ROOT}/synapse/data

services:
  synapse-db:
    container_name: synapse-db
    image: postgres:12-alpine
    security_opt:
      - no-new-privileges:true
    environment:
      - POSTGRES_DB=synapse
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_USER_PASS}
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8 --lc-collate=C --lc-ctype=C
    volumes:
      - synapse-database:/var/lib/postgresql/data
      - /etc/localtime:/etc/localtime:ro
    networks:
      - internal
    labels:
      - "traefik.enable=false"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
    restart: unless-stopped

  synapse-redis:
    container_name: synapse-redis
    image: redis:alpine
    security_opt:
      - no-new-privileges:true
    networks: 
      - internal
    volumes:
      - /etc/localtime:/etc/localtime:ro
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
    labels:
      - "traefik.enable=false"
    restart: unless-stopped

  synapse-app:
    container_name: synapse-app
    image: matrixdotorg/synapse:latest
    security_opt:
      - no-new-privileges:true
    environment:
      - SYNAPSE_SERVER_NAME=${SUBDOMAIN}.${DOMAIN}
      - SYNAPSE_REPORT_STATS=no
    volumes:
      - synapse-data:/data
      - /etc/localtime:/etc/localtime:ro
    depends_on:
      - synapse-db
      - synapse-redis
    networks:
      - proxy
      - internal
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.synapse.entrypoints=http"
      - "traefik.http.routers.synapse.rule=Host(`${SUBDOMAIN}.${DOMAIN}`)"
      - "traefik.http.routers.synapse.middlewares=secured@file"
      - "traefik.http.routers.synapse-secure.entrypoints=https"
      - "traefik.http.routers.synapse-secure.rule=Host(`${SUBDOMAIN}.${DOMAIN}`)"
      - "traefik.http.routers.synapse-secure.tls=true"
      - "traefik.http.routers.synapse-secure.tls.certresolver=le-dns"
      - "traefik.http.routers.synapse-secure.service=synapse"
      - "traefik.http.services.synapse.loadbalancer.server.port=8008"   
    restart: unless-stopped

  # # Enable this to enable federation
  # synapse-nginx:
  #   image: "nginx:latest"
  #   security_opt:
  #     - no-new-privileges:true
  #   volumes:
  #     - ./data/matrix/nginx/matrix.conf:/etc/nginx/conf.d/matrix.conf
  #     - ./data/matrix/nginx/www:/var/www/
  #     - /etc/localtime:/etc/localtime:ro
  #   networks:
  #     - proxy
  #     - internal
  #   labels:
  #     - "traefik.enable=true"
  #     - "traefik.http.routers.synapse-proxy.entrypoints=http"
  #     - "traefik.http.routers.synapse-proxy.rule=Host(`${SUBDOMAIN_FEDERATION}.${DOMAIN}`)"
  #     - "traefik.http.routers.synapse-proxy.middlewares=secured@file"
  #     - "traefik.http.routers.synapse-proxy-secure.entrypoints=https"
  #     - "traefik.http.routers.synapse-proxy-secure.rule=Host(`${SUBDOMAIN_FEDERATION}.${DOMAIN}`)"
  #     - "traefik.http.routers.synapse-proxy-secure.tls=true"
  #     - "traefik.http.routers.synapse-proxy-secure.tls.certresolver=le-dns"
  #     - "traefik.http.routers.synapse-proxy-secure.service=synapse-proxy"
  #     - "traefik.http.services.synapse-proxy.loadbalancer.server.port=80"  
  #   restart: "unless-stopped"