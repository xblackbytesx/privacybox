version: '3.8'

networks:
  proxy:
    name: proxy
    external: true
  internal:
    internal: true

volumes:
  romm-database:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${DOCKER_ROOT}/romm/database
  romm-resources:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${DOCKER_ROOT}/romm/resources
  romm-assets:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${DOCKER_ROOT}/romm/assets
  romm-roms-dir:
    driver: local
    driver_opts:
      type: ${MEDIA_DRIVER_OPT_TYPE}
      o: ${MEDIA_DRIVER_OPT_O}
      device: ${ROMS_PATH}

services:
  romm-db:
    container_name: romm-db
    image: mariadb:latest
    security_opt:
      - no-new-privileges:true
    command: --transaction-isolation=READ-COMMITTED --binlog-format=ROW
    environment:
      - MYSQL_ROOT_PASSWORD=${DB_ROOT_PASS}
      - MYSQL_DATABASE=${DB_NAME}
      - MYSQL_USER=romm
      - MYSQL_PASSWORD=${DB_USER_PASS}
    volumes:
      - romm-database:/var/lib/mysql
      - /etc/localtime:/etc/localtime:ro
    labels:
      - "traefik.enable=false"
    networks:
      - internal
    healthcheck:
      test: [ "CMD", "healthcheck.sh", "--connect", "--innodb_initialized" ]
      start_period: 1m
      # start_interval: 10s
      interval: 1m
      timeout: 5s
      retries: 3
    restart: unless-stopped

  romm-app:
    container_name: romm-app
    image: zurdi15/romm:latest
    security_opt:
      - no-new-privileges:true
    environment:
      - ROMM_DB_DRIVER=mariadb
      - ROMM_HOST=https://${SUBDOMAIN}.${DOMAIN}
      - DB_HOST=romm-db
      - DB_PORT=3306
      - DB_USER=romm
      - DB_NAME=${DB_NAME}
      - DB_PASSWD=${DB_USER_PASS}
      - IGDB_CLIENT_ID=${IGDB_CLIENT_ID}
      - IGDB_CLIENT_SECRET=${IGDB_CLIENT_SECRET}
      # [Optional - WIP] Use SteamGridDB as a source for covers
      # - STEAMGRIDDB_API_KEY=${STEAMGRIDDB_API_KEY}
      - ROMM_AUTH_SECRET_KEY=${SECRET_KEY}
      - ROMM_AUTH_USERNAME=${ADMIN_USER}
      - ROMM_AUTH_PASSWORD=${ADMIN_PASS}
      # [Optional] Will enable asynchronous tasks (all disabled by default)
      # Important: Do NOT wrap the cron expression in quotes
      - ENABLE_RESCAN_ON_FILESYSTEM_CHANGE=true
      - RESCAN_ON_FILESYSTEM_CHANGE_DELAY=5
      - ENABLE_SCHEDULED_RESCAN=true
      - SCHEDULED_RESCAN_CRON=0 3 * * *
      - ENABLE_SCHEDULED_UPDATE_SWITCH_TITLEDB=true
      - SCHEDULED_UPDATE_SWITCH_TITLEDB_CRON=0 4 * * *
      - ENABLE_SCHEDULED_UPDATE_MAME_XML=true
      - SCHEDULED_UPDATE_MAME_XML_CRON=0 5 * * *
    volumes:
      - 'romm-roms-dir:/romm/library'
      - 'romm-resources:/romm/resources'
      - 'romm-assets:/romm/assets'
      # - '${DOCKER_ROOT}/romm/config/config.yml:/romm/config.yml' # Optional
      - /etc/localtime:/etc/localtime:ro
    depends_on:
      romm-db:
        condition: service_healthy
    labels:
      - traefik.enable=true
      - traefik.http.routers.romm-app.entrypoints=web
      - traefik.http.routers.romm-app.rule=Host(`${SUBDOMAIN}.${DOMAIN}`)
      - traefik.http.routers.romm-app-secure.entrypoints=websecure
      - traefik.http.routers.romm-app-secure.rule=Host(`${SUBDOMAIN}.${DOMAIN}`)
      - traefik.http.routers.romm-app-secure.tls=true
      - traefik.http.routers.romm-app-secure.tls.certresolver=le-dns
      - traefik.http.routers.romm-app-secure.service=romm-app
      - traefik.http.routers.romm-app-secure.middlewares=https-redirect@file,non-www@file,secure-headers@file,gzip-compress@file,basic-auth@file
      - traefik.http.services.romm-app.loadbalancer.server.port=8080
      - traefik.http.routers.http-catchall.rule=HostRegexp(`{any:.+}`)
      - traefik.http.routers.http-catchall.entrypoints=web
      - traefik.http.routers.http-catchall.middlewares=https-redirect@file
    networks:
      - internal
      - proxy
    restart: "unless-stopped"
