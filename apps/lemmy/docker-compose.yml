name: lemmy

x-logging: &default-logging
  driver: "json-file"
  options:
    max-size: "50m"
    max-file: "4"

networks:
  proxy:
    name: proxy
    external: true
  internal:
    internal: true

volumes:
  lemmy-database:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${DOCKER_ROOT}/lemmy/database
  lemmy-pictrs:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${DOCKER_ROOT}/lemmy/pictrs

services:
  lemmy-postgres:
    container_name: lemmy-postgres
    image: postgres:17-alpine
    security_opt:
      - no-new-privileges:true
    hostname: lemmy-postgres
    environment:
      - POSTGRES_USER=lemmy
      - POSTGRES_PASSWORD=${DB_USER_PASS}
      - POSTGRES_DB=lemmy
      - POSTGRES_INITDB_ARGS=--auth-host=scram-sha-256 --auth-local=scram-sha-256
    volumes:
      - lemmy-database:/var/lib/postgresql/data:Z
      - /etc/localtime:/etc/localtime:ro
    networks:
      - internal
    logging: *default-logging
    command: >
      postgres
        -c max_connections=200
        -c shared_buffers=4GB
        -c effective_cache_size=12GB
        -c maintenance_work_mem=1GB
        -c checkpoint_completion_target=0.9
        -c checkpoint_timeout=86400
        -c wal_buffers=16MB
        -c default_statistics_target=100
        -c random_page_cost=1.1
        -c effective_io_concurrency=200
        -c work_mem=5242kB
        -c min_wal_size=1GB
        -c max_wal_size=30GB
        -c max_worker_processes=4
        -c max_parallel_workers_per_gather=2
        -c max_parallel_workers=4
        -c max_parallel_maintenance_workers=2
        -c synchronous_commit=off
        -c listen_addresses='*'
        -c shared_preload_libraries='auto_explain,pg_stat_statements'
        -c auto_explain.log_min_duration=5000ms
        -c pg_stat_statements.track=all
    shm_size: 4g
    healthcheck:
      test:
        - CMD-SHELL
        - pg_isready -U lemmy -d lemmy
      start_period: 30s
      interval: 10s
      timeout: 5s
      retries: 3
    restart: unless-stopped

  lemmy-app:
    container_name: lemmy-app
    image: dessalines/lemmy:0.19.12
    security_opt:
      - no-new-privileges:true
    hostname: lemmy
    environment:
      - RUST_LOG="warn"
    volumes:
      - ./lemmy.hjson:/config/config.hjson:Z
      - /etc/localtime:/etc/localtime:ro
    depends_on:
      - lemmy-postgres
      - lemmy-pictrs
    networks:
      - internal
      - proxy
    logging: *default-logging
    restart: unless-stopped

  lemmy-ui:
    container_name: lemmy-ui
    image: dessalines/lemmy-ui:0.19.12
    security_opt:
      - no-new-privileges:true
    environment:
      - LEMMY_UI_LEMMY_INTERNAL_HOST=lemmy-app:8536
      - LEMMY_UI_LEMMY_EXTERNAL_HOST=${SUBDOMAIN}.${DOMAIN}
      - LEMMY_UI_HTTPS=true
    volumes:
      - ./volumes/lemmy-ui/extra_themes:/app/extra_themes
      - /etc/localtime:/etc/localtime:ro
    depends_on:
      - lemmy-app
    networks:
      - internal
      - proxy
    logging: *default-logging
    restart: unless-stopped

  lemmy-nginx:
    container_name: lemmy-nginx
    image: nginx:1-alpine
    security_opt:
      - no-new-privileges:true
    depends_on:
      - lemmy-pictrs
      - lemmy-ui
    volumes:
      - ./nginx_internal.conf:/etc/nginx/nginx.conf:ro,Z
      - /etc/localtime:/etc/localtime:ro
    labels:
      - traefik.enable=true
      - traefik.http.routers.lemmy-nginx-secure.entrypoints=websecure
      - traefik.http.routers.lemmy-nginx-secure.rule=Host(`${SUBDOMAIN}.${DOMAIN}`)
      - traefik.http.routers.lemmy-nginx-secure.tls=true
      - traefik.http.routers.lemmy-nginx-secure.tls.certresolver=${CERT_RESOLVER}
      - traefik.http.routers.lemmy-nginx-secure.service=lemmy-nginx
      - traefik.http.routers.lemmy-nginx-secure.middlewares=https-redirect@file,non-www@file,secure-headers@file,gzip-compress@file
      - traefik.http.services.lemmy-nginx.loadbalancer.server.port=8536
    networks:
      - internal
      - proxy
    logging: *default-logging
    restart: unless-stopped

  lemmy-pictrs:
    container_name: lemmy-pictrs
    platform: linux/amd64
    image: asonix/pictrs:0.5.19
    security_opt:
      - no-new-privileges:true
    hostname: lemmy-pictrs
    # we can set options to pictrs like this, here we set max. image size and forced format for conversion
    # entrypoint: /sbin/tini -- /usr/local/bin/pict-rs -p /mnt -m 4 --image-format webp
    environment:
      - PICTRS__API_KEY=${PICTRS_API_KEY}
      - RUST_LOG=info
      - RUST_BACKTRACE=full
      - PICTRS__MEDIA__VIDEO_CODEC=vp9
      - PICTRS__MEDIA__GIF__MAX_WIDTH=256
      - PICTRS__MEDIA__GIF__MAX_HEIGHT=256
      - PICTRS__MEDIA__GIF__MAX_AREA=65536
      - PICTRS__MEDIA__GIF__MAX_FRAME_COUNT=400
    user: 991:991
    volumes:
      - lemmy-pictrs:/mnt:Z
      - /etc/localtime:/etc/localtime:ro
    networks:
      - internal
    deploy:
      resources:
        limits:
          memory: 690m
    logging: *default-logging
    restart: unless-stopped

  lemmy-postfix:
    container_name: lemmy-postfix
    image: mwader/postfix-relay
    security_opt:
      - no-new-privileges:true
    environment:
      - POSTFIX_myhostname=${SUBDOMAIN}.${DOMAIN}
    networks:
      - internal
    logging: *default-logging
    restart: "unless-stopped"
