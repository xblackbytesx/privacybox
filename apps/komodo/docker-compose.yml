name: komodo

networks:
  proxy:
    name: proxy
    external: true
  internal:
    internal: true

volumes:
  komodo-downloads:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${DOCKER_ROOT}/komodo/database
  komodo-config:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${DOCKER_ROOT}/komodo/config
  komodo-repo-cache:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${DOCKER_ROOT}/komodo/repo-cache

services:
  komodo-mongo:
    container_name: komodo-mongo
    image: mongo:latest
    security_opt:
      - no-new-privileges:true
    labels:
      komodo.skip: # Prevent Komodo from stopping with StopAllContainers
    command: --quiet --wiredTigerCacheSizeGB 0.25
    volumes:
      - komodo-database:/data/db
      - komodo-config:/data/configdb
      - /etc/localtime:/etc/localtime:ro
    environment:
      MONGO_INITDB_ROOT_USERNAME: komodo
      MONGO_INITDB_ROOT_PASSWORD: ${DB_USER_PASS}
    networks:
      - internal
    restart: unless-stopped
  
  komodo-core:
    container_name: komodo-core
    image: ghcr.io/moghtech/komodo-core:latest
    security_opt:
      - no-new-privileges:true
    labels:
      komodo.skip: # Prevent Komodo from stopping with StopAllContainers
    depends_on:
      - komodo-mongo
    env_file: ./compose.env
    environment:
      KOMODO_DATABASE_ADDRESS: komodo-mongo:27017
      KOMODO_DATABASE_USERNAME: komodo
      KOMODO_DATABASE_PASSWORD: ${DB_USER_PASS}
    volumes:
      ## Core cache for repos for latest commit hash / contents
      - komodo-repo-cache:/repo-cache
      ## Store sync files on server
      # - /path/to/syncs:/syncs
      ## Optionally mount a custom core.config.toml
      # - /path/to/core.config.toml:/config/config.toml
      - /etc/localtime:/etc/localtime:ro
    ## Allows for systemd Periphery connection at 
    ## "http://host.docker.internal:8120"
    # extra_hosts:
    #   - host.docker.internal:host-gateway
    networks:
      - internal
      - proxy
    labels:
      - traefik.enable=true
      - traefik.http.routers.komodo-core-secure.entrypoints=websecure
      - traefik.http.routers.komodo-core-secure.rule=Host(`${SUBDOMAIN:+${SUBDOMAIN}.}${DOMAIN}`)
      - traefik.http.routers.komodo-core-secure.tls=true
      - traefik.http.routers.komodo-core-secure.tls.certresolver=${CERT_RESOLVER}
      - traefik.http.routers.komodo-core-secure.service=komodo-core
      - traefik.http.routers.komodo-core-secure.middlewares=https-redirect@file,non-www@file,secure-headers@file,gzip-compress@file
      - traefik.http.services.komodo-core.loadbalancer.server.port=9120
    restart: unless-stopped

  ## Deploy Periphery container using this block,
  ## or deploy the Periphery binary with systemd using 
  ## https://github.com/moghtech/komodo/tree/main/scripts

  komodo-periphery:
    image: ghcr.io/moghtech/komodo-periphery:latest
    security_opt:
      - no-new-privileges:true
    labels:
      komodo.skip: # Prevent Komodo from stopping with StopAllContainers
    env_file: ./compose.env
    volumes:
      ## Mount external docker socket
      - /var/run/docker.sock:/var/run/docker.sock
      ## Allow Periphery to see processes outside of container
      - /proc:/proc
      ## Specify the Periphery agent root directory.
      ## Must be the same inside and outside the container,
      ## or docker will get confused. See https://github.com/moghtech/komodo/discussions/180.
      ## Default: /etc/komodo.
      - ${PERIPHERY_ROOT_DIRECTORY:-/etc/komodo}:${PERIPHERY_ROOT_DIRECTORY:-/etc/komodo}
      - /etc/localtime:/etc/localtime:ro
    networks:
      - internal
    restart: unless-stopped